import queue
import requests
import sys
import threading
import time

TARGET = "http://xxx/wordpress"
THREADS = 10
answers = queue.Queue()  # 存储最后实际扫描到的路径

def test_remote(dictionary_path):  # 通过参数传递字典文件的路径
    with open(dictionary_path) as f:
        paths = f.read().splitlines()  # 按照换行符 \n 进行分割，并返回一个包含每一行作为元素的列表

    for path in paths:
        url = f'{TARGET}{path}'
        time.sleep(2)  # 每个请求间隔2秒
        r = requests.get(url)
        if r.status_code == 200:
            answers.put(url)
            sys.stdout.write('+')
        else:
            sys.stdout.write('x')
        sys.stdout.flush()

def run():
    mythreads = list()  # 创建了一个空列表 mythreads 用于存储线程对象
    for i in range(THREADS):
        print(f'Spawning thread {i}')
        t = threading.Thread(target=test_remote, args=("./dictionary.txt",))  # 更改为字典路径
        mythreads.append(t)
        t.start()
    for thread in mythreads:
        thread.join()

if __name__ == '__main__':
    run()
    with open('result.txt', 'w') as f:
        while not answers.empty():
            f.write(f'{answers.get()}\n')
    print('done')
